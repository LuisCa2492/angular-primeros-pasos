{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: uuid(),\n      name: \"Vegeta\",\n      power: 1000\n    }, {\n      id: uuid(),\n      name: \"Picoro\",\n      power: 500\n    }, {\n      id: uuid(),\n      name: \"Androide 18\",\n      power: 3000\n    }];\n  }\n  onNewCharacter(character) {\n    const newCharacter = {\n      id: uuid(),\n      name: character.name,\n      power: character.power\n    };\n    this.characters.push(newCharacter);\n    console.log(newCharacter);\n  }\n  // onDeleteCharacter(index:number):void{\n  //     this.characters.splice(index,1);\n  // }\n  deleteCharacterById(index) {\n    this.characters.filter(character => character.id !== index);\n  }\n}\nDbzService.ɵfac = function DbzService_Factory(t) {\n  return new (t || DbzService)();\n};\nDbzService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DbzService,\n  factory: DbzService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAGjC,OAAM,MAAOC,UAAU;EADvBC;IAGI,eAAU,GAAc,CAAC;MACrBC,EAAE,EAACH,IAAI,EAAE;MACTI,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC;KACT,EACD;MACIF,EAAE,EAACH,IAAI,EAAE;MACTI,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC;KACT,EACD;MACIF,EAAE,EAACH,IAAI,EAAE;MACTI,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC;KACT,CAAC;;EAEFC,cAAc,CAACC,SAAmB;IAC9B,MAAMC,YAAY,GAAC;MACfL,EAAE,EAACH,IAAI,EAAE;MACTI,IAAI,EAACG,SAAS,CAACH,IAAI;MACnBC,KAAK,EAACE,SAAS,CAACF;KACnB;IACD,IAAI,CAACI,UAAU,CAACC,IAAI,CAACF,YAAY,CAAC;IAClCG,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EAC7B;EAEA;EACA;EACA;EAEAK,mBAAmB,CAACC,KAAY;IAC5B,IAAI,CAACL,UAAU,CAACM,MAAM,CAACR,SAAS,IAAIA,SAAS,CAACJ,EAAE,KAAKW,KAAK,CAAC;EAC/D;;AAlCSb,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAe,SAAVf,UAAU;EAAAgB,YADE;AAAM","names":["v4","uuid","DbzService","constructor","id","name","power","onNewCharacter","character","newCharacter","characters","push","console","log","deleteCharacterById","index","filter","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\luigi\\OneDrive\\Documentos\\Curso_Udemy_Angular\\02-Bases\\src\\app\\dbz\\services\\dbz-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Character } from '../interfaces/character.interface';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DbzService {\r\n\r\n    characters:Character[]= [{\r\n        id:uuid(),\r\n        name:\"Vegeta\",\r\n        power:1000\r\n    },\r\n    {\r\n        id:uuid(),\r\n        name:\"Picoro\",\r\n        power:500\r\n    },\r\n    {\r\n        id:uuid(),\r\n        name:\"Androide 18\",\r\n        power:3000\r\n    }];\r\n\r\n    onNewCharacter(character:Character):void{\r\n        const newCharacter={\r\n            id:uuid(),\r\n            name:character.name,\r\n            power:character.power\r\n        }\r\n        this.characters.push(newCharacter);\r\n        console.log(newCharacter);\r\n    }\r\n\r\n    // onDeleteCharacter(index:number):void{\r\n    //     this.characters.splice(index,1);\r\n    // }\r\n    \r\n    deleteCharacterById(index:string){\r\n        this.characters.filter(character => character.id !== index);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
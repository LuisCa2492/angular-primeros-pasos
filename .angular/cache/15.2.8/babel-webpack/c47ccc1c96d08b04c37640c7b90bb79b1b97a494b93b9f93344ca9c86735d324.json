{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      name: \"Vegeta\",\n      power: 1000\n    }, {\n      name: \"Picoro\",\n      power: 500\n    }, {\n      name: \"Androide 18\",\n      power: 3000\n    }];\n  }\n  onNewCharacter(character) {\n    this.characters.push(character);\n    console.log(character);\n  }\n  onDeleteCharacter(index) {\n    this.characters.splice(index, 1);\n  }\n}\nDbzService.ɵfac = function DbzService_Factory(t) {\n  return new (t || DbzService)();\n};\nDbzService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DbzService,\n  factory: DbzService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAIA,OAAM,MAAOA,UAAU;EADvBC;IAGI,eAAU,GAAc,CAAC;MACrBC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC;KACT,EACD;MACID,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC;KACT,EACD;MACID,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC;KACT,CAAC;;EAEFC,cAAc,CAACC,SAAmB;IAC9B,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;IAC/BG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EAC1B;EAEAK,iBAAiB,CAACC,KAAY;IAC1B,IAAI,CAACL,UAAU,CAACM,MAAM,CAACD,KAAK,EAAC,CAAC,CAAC;EACnC;;AAtBSX,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAa,SAAVb,UAAU;EAAAc,YADE;AAAM","names":["DbzService","constructor","name","power","onNewCharacter","character","characters","push","console","log","onDeleteCharacter","index","splice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\luigi\\OneDrive\\Documentos\\Curso_Udemy_Angular\\02-Bases\\src\\app\\dbz\\services\\dbz-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Character } from '../interfaces/character.interface';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DbzService {\r\n\r\n    characters:Character[]= [{\r\n        name:\"Vegeta\",\r\n        power:1000\r\n    },\r\n    {\r\n        name:\"Picoro\",\r\n        power:500\r\n    },\r\n    {\r\n        name:\"Androide 18\",\r\n        power:3000\r\n    }];\r\n\r\n    onNewCharacter(character:Character):void{\r\n        this.characters.push(character);\r\n        console.log(character);\r\n    }\r\n\r\n    onDeleteCharacter(index:number):void{\r\n        this.characters.splice(index,1);\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}